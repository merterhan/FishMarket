// <auto-generated />
using System;
using FishMarket.DataAccess.Concrete.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FishMarket.DataAccess.Migrations
{
    [DbContext(typeof(FishMarketContext))]
    [Migration("20220704053456_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4", DelegationModes.ApplyToAll);

            modelBuilder.Entity("FishMarket.Entities.Concrete.Fish", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChangedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ChangedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Fish");
                });

            modelBuilder.Entity("FishMarket.Entities.Concrete.FishPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FishId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("FishId");

                    b.ToTable("FishPrice");
                });

            modelBuilder.Entity("FishMarket.Entities.Concrete.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("015d2747-b9ec-440d-a3ec-b30f5bf014a5"),
                            CreatedOn = new DateTime(2022, 7, 4, 8, 34, 56, 35, DateTimeKind.Local).AddTicks(8350),
                            Email = "info@cagrierhan.com",
                            EmailConfirmed = true,
                            Password = "F118A7EEF3641C3AC9E4D9176F5F1518D658AC674FFF113E22C7C9F74A2B7733",
                            PasswordSalt = "716c4bab-92b6-44c2-8d34-522357c5a685"
                        });
                });

            modelBuilder.Entity("FishMarket.Entities.Concrete.FishPrice", b =>
                {
                    b.HasOne("FishMarket.Entities.Concrete.Fish", "Fish")
                        .WithMany("FishPrices")
                        .HasForeignKey("FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fish");
                });

            modelBuilder.Entity("FishMarket.Entities.Concrete.Fish", b =>
                {
                    b.Navigation("FishPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
